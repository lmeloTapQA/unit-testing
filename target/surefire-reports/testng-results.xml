<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-06-30T15:54:15 CDT" name="Command line suite" finished-at="2020-06-30T15:54:15 CDT" duration-ms="498">
    <groups>
    </groups>
    <test started-at="2020-06-30T15:54:15 CDT" name="Command line test" finished-at="2020-06-30T15:54:15 CDT" duration-ms="498">
      <class name="bankService.SavingsAccountTest">
        <test-method is-config="true" signature="eachTimeSetup()[pri:0, instance:bankService.SavingsAccountTest@19bb07ed]" started-at="2020-06-30T15:54:15 CDT" name="eachTimeSetup" finished-at="2020-06-30T15:54:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eachTimeSetup -->
        <test-method is-config="true" signature="oneTimeSetup()[pri:0, instance:bankService.SavingsAccountTest@19bb07ed]" started-at="2020-06-30T15:54:15 CDT" name="oneTimeSetup" finished-at="2020-06-30T15:54:15 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oneTimeSetup -->
        <test-method signature="withdrawingAmountGreaterThanBalance_Throws_InsufficientFundsException()[pri:0, instance:bankService.SavingsAccountTest@19bb07ed]" started-at="2020-06-30T15:54:15 CDT" name="withdrawingAmountGreaterThanBalance_Throws_InsufficientFundsException" finished-at="2020-06-30T15:54:15 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withdrawingAmountGreaterThanBalance_Throws_InsufficientFundsException -->
        <test-method signature="withdrawingValidAmountFromSavingsAccount_DecreasesBalanceByAmount(double, double)[pri:0, instance:bankService.SavingsAccountTest@19bb07ed]" started-at="2020-06-30T15:54:15 CDT" name="withdrawingValidAmountFromSavingsAccount_DecreasesBalanceByAmount" data-provider="ValidWithdrawDataProvider" finished-at="2020-06-30T15:54:15 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[40.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withdrawingValidAmountFromSavingsAccount_DecreasesBalanceByAmount -->
        <test-method is-config="true" signature="eachTimeSetup()[pri:0, instance:bankService.SavingsAccountTest@19bb07ed]" started-at="2020-06-30T15:54:15 CDT" name="eachTimeSetup" finished-at="2020-06-30T15:54:15 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eachTimeSetup -->
        <test-method signature="withdrawingValidAmountFromSavingsAccount_DecreasesBalanceByAmount(double, double)[pri:0, instance:bankService.SavingsAccountTest@19bb07ed]" started-at="2020-06-30T15:54:15 CDT" name="withdrawingValidAmountFromSavingsAccount_DecreasesBalanceByAmount" data-provider="ValidWithdrawDataProvider" finished-at="2020-06-30T15:54:15 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withdrawingValidAmountFromSavingsAccount_DecreasesBalanceByAmount -->
        <test-method is-config="true" signature="eachTimeSetup()[pri:0, instance:bankService.SavingsAccountTest@19bb07ed]" started-at="2020-06-30T15:54:15 CDT" name="eachTimeSetup" finished-at="2020-06-30T15:54:15 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eachTimeSetup -->
      </class> <!-- bankService.SavingsAccountTest -->
      <class name="bankService.CustomerTest">
        <test-method signature="creatingCustomerWithValidData_StoresSpecifiedData()[pri:0, instance:bankService.CustomerTest@4b0b0854]" started-at="2020-06-30T15:54:15 CDT" name="creatingCustomerWithValidData_StoresSpecifiedData" finished-at="2020-06-30T15:54:15 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatingCustomerWithValidData_StoresSpecifiedData -->
        <test-method signature="updatingCustomerDataWithDifferentValidValues_StoredNewValues()[pri:0, instance:bankService.CustomerTest@4b0b0854]" started-at="2020-06-30T15:54:15 CDT" name="updatingCustomerDataWithDifferentValidValues_StoredNewValues" finished-at="2020-06-30T15:54:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatingCustomerDataWithDifferentValidValues_StoredNewValues -->
      </class> <!-- bankService.CustomerTest -->
      <class name="bankService.CheckingAccountTest">
        <test-method is-config="true" signature="oneTimeSetup()[pri:0, instance:bankService.CheckingAccountTest@e056f20]" started-at="2020-06-30T15:54:15 CDT" name="oneTimeSetup" finished-at="2020-06-30T15:54:15 CDT" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oneTimeSetup -->
        <test-method is-config="true" signature="eachTimeSetup()[pri:0, instance:bankService.CheckingAccountTest@e056f20]" started-at="2020-06-30T15:54:15 CDT" name="eachTimeSetup" finished-at="2020-06-30T15:54:15 CDT" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eachTimeSetup -->
        <test-method signature="processingCheckWithNotificationsEnabled_DecreaseBalanceAndSendsMessage()[pri:0, instance:bankService.CheckingAccountTest@e056f20]" started-at="2020-06-30T15:54:15 CDT" name="processingCheckWithNotificationsEnabled_DecreaseBalanceAndSendsMessage" finished-at="2020-06-30T15:54:15 CDT" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processingCheckWithNotificationsEnabled_DecreaseBalanceAndSendsMessage -->
        <test-method is-config="true" signature="eachTimeSetup()[pri:0, instance:bankService.CheckingAccountTest@e056f20]" started-at="2020-06-30T15:54:15 CDT" name="eachTimeSetup" finished-at="2020-06-30T15:54:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eachTimeSetup -->
        <test-method signature="processingCheckWithSufficientFund_DecreasesBalanceByAmount()[pri:0, instance:bankService.CheckingAccountTest@e056f20]" started-at="2020-06-30T15:54:15 CDT" name="processingCheckWithSufficientFund_DecreasesBalanceByAmount" finished-at="2020-06-30T15:54:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- processingCheckWithSufficientFund_DecreasesBalanceByAmount -->
      </class> <!-- bankService.CheckingAccountTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
